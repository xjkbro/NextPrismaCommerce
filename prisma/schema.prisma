generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                 String    @id @default(cuid())
    userId             String
    providerType       String
    providerId         String
    providerAccountId  String
    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?
    createdAt          DateTime  @default(now())
    updatedAt          DateTime? @updatedAt
    user               User      @relation(fields: [userId], references: [id])

    @@unique([providerId, providerAccountId])
}

model Session {
    id           String    @id @default(cuid())
    sessionToken String    @unique
    userId       String
    expires      DateTime
    user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken  String    @unique
    createdAt    DateTime  @default(now())
    updatedAt    DateTime? @updatedAt
}

model User {
    id            String    @id @default(cuid())
    firstname     String?
    lastname      String?
    company       String?
    username      String?   @unique
    email         String?   @unique
    emailVerified DateTime?
    password      String?
    image         String?
    role          String    @default("user")
    createdAt     DateTime  @default(now())
    updatedAt     DateTime? @updatedAt
    posts         Post[]
    accounts      Account[]
    sessions      Session[]
    Order         Order[]
}

model Order {
    id          String    @id @default(cuid())
    orderNumber Int       @default(autoincrement())
    user        User?     @relation(fields: [userId], references: [id])
    userId      String?
    cartItems   Product[]
}

model Product {
    id                String    @id @default(cuid())
    title             String    @unique
    slug              String    @unique
    description       String    @db.VarChar(10000)
    short_description String?
    price             Float
    quantity          Int
    image             String
    specifications    String?
    visible           Boolean   @default(true)
    available         Boolean   @default(true)
    sale_price        Float?
    weight            Float     @default(1)
    averageRating     Float?
    createdAt         DateTime  @default(now())
    category          Category? @relation(fields: [categoryId], references: [id])
    categoryId        String?
    inOrders          Order[]
}

model Category {
    id          String    @id @default(cuid())
    name        String    @unique
    slug        String    @unique
    description String?
    createdAt   DateTime  @default(now())
    products    Product[]
}

model Post {
    id        Int       @id @default(autoincrement())
    title     String
    content   String?
    published Boolean   @default(false)
    author    User?     @relation(fields: [authorId], references: [id])
    authorId  String?
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}
